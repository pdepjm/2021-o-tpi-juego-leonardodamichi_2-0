import wollok.game.*
import barcos.*
import impacto.*
import nivel.*
import AI.*
import mouse.*
import jugadores.*
import soundProducer.*
import disparo.*

describe "Aliado" {
	method initialize() {
		soundProducer.provider(soundProviderMock)		
	}
	
	method posicionarBarcos(){
		return new Aliado(barcos = [
			new BarcoAliado(position = game.at(5,5), vida = 2, tipoBarco = submarino),
			new BarcoAliado(position = game.at(9,5), vida = 2, tipoBarco = submarino),
			new BarcoAliado(position = game.at(12,5), vida = 2, tipoBarco = submarino),
			new BarcoAliado(position = game.at(5,7), vida = 3, tipoBarco = corbeta),
			new BarcoAliado(position = game.at(10,8), vida = 3, tipoBarco = corbeta),
			new BarcoAliado(position = game.at(5,10), vida = 4, tipoBarco = fragata),
			new BarcoAliado(position = game.at(9,12), vida = 5, tipoBarco = portaviones)
			]
			
		)
	}
		
	test "Posiciono los barcos" {
		assert.that(posicionamiento.barcosListos(self.posicionarBarcos()))
	}	
	
	test "No posiciono los barcos" {
		assert.notThat(posicionamiento.barcosListos(partida.aliado()))
	}
	
	test "Disparo al agua" {
		assert.notThat(disparo.hayBarco(partida.enemigo(),game.at(19,4)))
	}
	
	test "Disparo a un barco" {
		assert.that(disparo.hayBarco(partida.enemigo(),game.at(24,4)))
	}
	
	test "Hundio un barco enemigo" {
		const barcoEnemigoPrueba = new BarcoEnemigo(position = game.at(19,12), posiciones = [game.at(19,12),game.at(19,13)], tipoBarco = submarino, vida = 2)
		disparo.realizarImpacto(barcoEnemigoPrueba)
		disparo.realizarImpacto(barcoEnemigoPrueba)
		assert.that(barcoEnemigoPrueba.barcoHundido())
	}
	
	test "No hundio un barco enemigo" {
		const barcoEnemigoPrueba = new BarcoEnemigo(position = game.at(19,12), posiciones = [game.at(19,12),game.at(19,13)], tipoBarco = submarino, vida = 2)
		disparo.realizarImpacto(barcoEnemigoPrueba)
		assert.notThat(barcoEnemigoPrueba.barcoHundido())
	}
	
}


describe "Enemigo" {
	method initialize() {
		soundProducer.provider(soundProviderMock)		
	}
	
	test "Disparo al agua" {
		assert.notThat(disparo.hayBarco(partida.aliado(),game.at(4,4)))
	}	
	
	test "Disparo a un barco" {
		const aliadoPrueba = new Aliado(barcos = [new BarcoAliado(position = game.at(5,5), vida = 3, tipoBarco = corbeta)])	
		partida.setearUbicacionesIniciales(aliadoPrueba)
		assert.that(disparo.hayBarco(aliadoPrueba,game.at(5,5)))
	}	
}


describe "Disparo" {
	method initialize() {
		soundProducer.provider(soundProviderMock)		
	}
	
	test "Coordenada incorrecta para disparar" {
		assert.notThat(partida.esPosicionValida(game.at(12,5)))
	}	
	
	test "Coordenada correcta para disparar" {
		assert.that(partida.esPosicionValida(game.at(20,8)))
	}	
	
	test "Disparo ya efectuado en coordenada" {
		misilAgua.posicionYaDisparada(game.at(20,8))
		assert.that(partida.yaSeDisparo(game.at(20,8)))
	}	
	
	test "Disparo efectuado" {
		assert.notThat(partida.yaSeDisparo(game.at(20,8)))
	}	
	
}